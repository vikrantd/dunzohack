{"version":3,"file":"entity.es5.js","sources":["../../../modules/entity/index.ts","../../../modules/entity/src/create_adapter.ts","../../../modules/entity/src/sorted_state_adapter.ts","../../../modules/entity/src/unsorted_state_adapter.ts","../../../modules/entity/src/state_adapter.ts","../../../modules/entity/src/state_selectors.ts","../../../modules/entity/src/entity_state.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {createEntityAdapter,EntityState,EntityAdapter} from './public_api';\n","import { createSelector } from '@ngrx/store';\nimport {\n  EntityDefinition,\n  Comparer,\n  IdSelector,\n  EntityAdapter,\n} from './models';\nimport { createInitialStateFactory } from './entity_state';\nimport { createSelectorsFactory } from './state_selectors';\nimport { createSortedStateAdapter } from './sorted_state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nexport function createEntityAdapter<T>(\n  options: {\n    selectId?: IdSelector<T>;\n    sortComparer?: false | Comparer<T>;\n  } = {}\n): EntityAdapter<T> {\n  const { selectId, sortComparer }: EntityDefinition<T> = {\n    sortComparer: false,\n    selectId: (instance: any) => instance.id,\n    ...options,\n  };\n\n  const /** @type {?} */ stateFactory = createInitialStateFactory<T>();\n  const /** @type {?} */ selectorsFactory = createSelectorsFactory<T>();\n  const /** @type {?} */ stateAdapter = sortComparer\n    ? createSortedStateAdapter(selectId, sortComparer)\n    : createUnsortedStateAdapter(selectId);\n\n  return {\n    ...stateFactory,\n    ...selectorsFactory,\n    ...stateAdapter,\n  };\n}\n","import {\n  EntityState,\n  IdSelector,\n  Comparer,\n  Dictionary,\n  EntityStateAdapter,\n  Update,\n} from './models';\nimport { createStateOperator } from './state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n\nexport function createSortedStateAdapter<T>(\n  selectId: IdSelector<T>,\n  sort: Comparer<T>\n): EntityStateAdapter<T>;\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nexport function createSortedStateAdapter<T>(selectId: any, sort: any): any {\n  type R = EntityState<T>;\n\n  const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(\n    selectId\n  );\n\n  function addOneMutably(entity: T, state: R): boolean;\n/**\n * @param {?} entity\n * @param {?} state\n * @return {?}\n */\nfunction addOneMutably(entity: any, state: any): boolean {\n    return addManyMutably([entity], state);\n  }\n\n  function addManyMutably(newModels: T[], state: R): boolean;\n/**\n * @param {?} newModels\n * @param {?} state\n * @return {?}\n */\nfunction addManyMutably(newModels: any[], state: any): boolean {\n    const /** @type {?} */ models = newModels.filter(\n      model => !(selectId(model) in state.entities)\n    );\n\n    return merge(models, state);\n  }\n\n  function addAllMutably(models: T[], state: R): boolean;\n/**\n * @param {?} models\n * @param {?} state\n * @return {?}\n */\nfunction addAllMutably(models: any[], state: any): boolean {\n    state.entities = {};\n    state.ids = [];\n\n    addManyMutably(models, state);\n\n    return true;\n  }\n\n  function updateOneMutably(update: Update<T>, state: R): boolean;\n/**\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction updateOneMutably(update: any, state: any): boolean {\n    return updateManyMutably([update], state);\n  }\n\n  function takeUpdatedModel(models: T[], update: Update<T>, state: R): void;\n/**\n * @param {?} models\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction takeUpdatedModel(models: any[], update: any, state: any): void {\n    if (!(update.id in state.entities)) {\n      return;\n    }\n\n    const /** @type {?} */ original = state.entities[update.id];\n    const /** @type {?} */ updated = Object.assign({}, original, update.changes);\n\n    delete state.entities[update.id];\n\n    models.push(updated);\n  }\n\n  function updateManyMutably(updates: Update<T>[], state: R): boolean;\n/**\n * @param {?} updates\n * @param {?} state\n * @return {?}\n */\nfunction updateManyMutably(updates: any[], state: any): boolean {\n    const /** @type {?} */ models: T[] = [];\n\n    updates.forEach(update => takeUpdatedModel(models, update, state));\n\n    if (models.length) {\n      state.ids = state.ids.filter((id: any) => id in state.entities);\n    }\n\n    return merge(models, state);\n  }\n\n  function merge(models: T[], state: R): boolean;\n/**\n * @param {?} models\n * @param {?} state\n * @return {?}\n */\nfunction merge(models: any[], state: any): boolean {\n    if (models.length === 0) {\n      return false;\n    }\n\n    models.sort(sort);\n\n    const /** @type {?} */ ids: any[] = [];\n\n    let /** @type {?} */ i = 0;\n    let /** @type {?} */ j = 0;\n\n    while (i < models.length && j < state.ids.length) {\n      const /** @type {?} */ model = models[i];\n      const /** @type {?} */ modelId = selectId(model);\n      const /** @type {?} */ entityId = state.ids[j];\n      const /** @type {?} */ entity = state.entities[entityId];\n\n      if (sort(model, entity) <= 0) {\n        ids.push(modelId);\n        i++;\n      } else {\n        ids.push(entityId);\n        j++;\n      }\n    }\n\n    if (i < models.length) {\n      state.ids = ids.concat(models.slice(i).map(selectId));\n    } else {\n      state.ids = ids.concat(state.ids.slice(j));\n    }\n\n    models.forEach((model, i) => {\n      state.entities[selectId(model)] = model;\n    });\n\n    return true;\n  }\n\n  return {\n    removeOne,\n    removeMany,\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    addAll: createStateOperator(addAllMutably),\n    addMany: createStateOperator(addManyMutably),\n    updateMany: createStateOperator(updateManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter, IdSelector, Update } from './models';\nimport { createStateOperator } from './state_adapter';\n\nexport function createUnsortedStateAdapter<T>(\n  selectId: IdSelector<T>\n): EntityStateAdapter<T>;\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nexport function createUnsortedStateAdapter<T>(selectId: IdSelector<T>): any {\n  type R = EntityState<T>;\n\n  function addOneMutably(entity: T, state: R): boolean;\n/**\n * @param {?} entity\n * @param {?} state\n * @return {?}\n */\nfunction addOneMutably(entity: any, state: any): boolean {\n    const /** @type {?} */ key = selectId(entity);\n\n    if (key in state.entities) {\n      return false;\n    }\n\n    state.ids.push(key);\n    state.entities[key] = entity;\n\n    return true;\n  }\n\n  function addManyMutably(entities: T[], state: R): boolean;\n/**\n * @param {?} entities\n * @param {?} state\n * @return {?}\n */\nfunction addManyMutably(entities: any[], state: any): boolean {\n    let /** @type {?} */ didMutate = false;\n\n    for (let /** @type {?} */ index in entities) {\n      didMutate = addOneMutably(entities[index], state) || didMutate;\n    }\n\n    return didMutate;\n  }\n\n  function addAllMutably(entities: T[], state: R): boolean;\n/**\n * @param {?} entities\n * @param {?} state\n * @return {?}\n */\nfunction addAllMutably(entities: any[], state: any): boolean {\n    state.ids = [];\n    state.entities = {};\n\n    addManyMutably(entities, state);\n\n    return true;\n  }\n\n  function removeOneMutably(key: T, state: R): boolean;\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\nfunction removeOneMutably(key: any, state: any): boolean {\n    return removeManyMutably([key], state);\n  }\n\n  function removeManyMutably(keys: T[], state: R): boolean;\n/**\n * @param {?} keys\n * @param {?} state\n * @return {?}\n */\nfunction removeManyMutably(keys: any[], state: any): boolean {\n    const /** @type {?} */ didMutate =\n      keys\n        .filter(key => key in state.entities)\n        .map(key => delete state.entities[key]).length > 0;\n\n    if (didMutate) {\n      state.ids = state.ids.filter((id: any) => id in state.entities);\n    }\n\n    return didMutate;\n  }\n\n  function removeAll<S extends R>(state: S): S;\n/**\n * @template S\n * @param {?} state\n * @return {?}\n */\nfunction removeAll<S extends R>(state: any): S {\n    return Object.assign({}, state, {\n      ids: [],\n      entities: {},\n    });\n  }\n\n  function takeNewKey(\n    keys: { [id: string]: string },\n    update: Update<T>,\n    state: R\n  ): void;\n/**\n * @param {?} keys\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction takeNewKey(\n    keys: { [id: string]: any },\n    update: Update<T>,\n    state: any\n  ): void {\n    const /** @type {?} */ original = state.entities[update.id];\n    const /** @type {?} */ updated: T = Object.assign({}, original, update.changes);\n    const /** @type {?} */ newKey = selectId(updated);\n\n    if (newKey !== update.id) {\n      keys[update.id] = newKey;\n      delete state.entities[update.id];\n    }\n\n    state.entities[newKey] = updated;\n  }\n\n  function updateOneMutably(update: Update<T>, state: R): boolean;\n/**\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction updateOneMutably(update: any, state: any): boolean {\n    return updateManyMutably([update], state);\n  }\n\n  function updateManyMutably(updates: Update<T>[], state: R): boolean;\n/**\n * @param {?} updates\n * @param {?} state\n * @return {?}\n */\nfunction updateManyMutably(updates: any[], state: any): boolean {\n    const /** @type {?} */ newKeys: { [id: string]: string } = {};\n\n    const /** @type {?} */ didMutate =\n      updates\n        .filter(update => update.id in state.entities)\n        .map(update => takeNewKey(newKeys, update, state)).length > 0;\n\n    if (didMutate) {\n      state.ids = state.ids.map((id: any) => newKeys[id] || id);\n    }\n\n    return didMutate;\n  }\n\n  return {\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    addMany: createStateOperator(addManyMutably),\n    addAll: createStateOperator(addAllMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    removeOne: createStateOperator(removeOneMutably),\n    removeMany: createStateOperator(removeManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter } from './models';\n\nexport function createStateOperator<V, R>(\n  mutator: (arg: R, state: EntityState<V>) => boolean\n): EntityState<V>;\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nexport function createStateOperator<V, R>(\n  mutator: (arg: any, state: any) => boolean\n): any {\n  return function operation<S extends EntityState<V>>(arg: R, state: any): S {\n    const /** @type {?} */ clonedEntityState: EntityState<V> = {\n      ids: [...state.ids],\n      entities: { ...state.entities },\n    };\n\n    const /** @type {?} */ didMutate = mutator(arg, clonedEntityState);\n\n    if (didMutate) {\n      return Object.assign({}, state, clonedEntityState);\n    }\n\n    return state;\n  };\n}\n","import { createSelector } from '@ngrx/store';\nimport { EntityState, EntitySelectors, Dictionary } from './models';\n/**\n * @template T\n * @return {?}\n */\nexport function createSelectorsFactory<T>() {\n  function getSelectors(): EntitySelectors<T, EntityState<T>>;\n  function getSelectors<V>(\n    selectState: (state: V) => EntityState<T>\n  ): EntitySelectors<T, V>;\n/**\n * @param {?=} selectState\n * @return {?}\n */\nfunction getSelectors(\n    selectState?: (state: any) => EntityState<T>\n  ): EntitySelectors<T, any> {\n    const /** @type {?} */ selectIds = (state: any) => state.ids;\n    const /** @type {?} */ selectEntities = (state: EntityState<T>) => state.entities;\n    const /** @type {?} */ selectAll = createSelector(\n      selectIds,\n      selectEntities,\n      (ids: T[], entities: Dictionary<T>): any =>\n        ids.map((id: any) => ( /** @type {?} */((entities as any)))[id])\n    );\n\n    const /** @type {?} */ selectTotal = createSelector(selectIds, ids => ids.length);\n\n    if (!selectState) {\n      return {\n        selectIds,\n        selectEntities,\n        selectAll,\n        selectTotal,\n      };\n    }\n\n    return {\n      selectIds: createSelector(selectState, selectIds),\n      selectEntities: createSelector(selectState, selectEntities),\n      selectAll: createSelector(selectState, selectAll),\n      selectTotal: createSelector(selectState, selectTotal),\n    };\n  }\n\n  return { getSelectors };\n}\n","import { EntityState } from './models';\n/**\n * @template V\n * @return {?}\n */\nexport function getInitialEntityState<V>(): EntityState<V> {\n  return {\n    ids: [],\n    entities: {},\n  };\n}\n/**\n * @template V\n * @return {?}\n */\nexport function createInitialStateFactory<V>() {\n  function getInitialState(): EntityState<V>;\n  function getInitialState<S extends object>(\n    additionalState: S\n  ): EntityState<V> & S;\n/**\n * @param {?=} additionalState\n * @return {?}\n */\nfunction getInitialState(additionalState: any = {}): any {\n    return Object.assign(getInitialEntityState(), additionalState);\n  }\n\n  return { getInitialState };\n}\n"],"names":[],"mappings":";AMCA;;;;AAIA;IACE,MAAF,CAHS;QAIL,GAAG,EAHE,EAAA;QAIL,QAAQ,EAHE,EAAA;KAIX,CAHC;AAIJ,CAAC;;;;;AAKD;;;;;IASA,yBAVG,eAAA;QAAA,gCAAA,EAAA,oBAAA;QAWC,MAAJ,CAVW,MAAA,CAAO,MAAC,CAAM,qBAAC,EAAqB,EAAG,eAAA,CAAgB,CAAC;IAWnE,CAAG;IAED,MAAF,CAVS,EAAE,eAAA,iBAAA,EAAgB,CAAE;AAW7B,CAAC;AD3BD;;;;AAIA;;;;;IASA,sBACI,WAA4C;QAE5C,IAAJ,gBAAA,CAPU,SAAA,GAAY,UAAA,KAAQ,IAAQ,OAAA,KAAA,CAAM,GAAC,EAAP,CAAO,CAAG;QAQ5C,IAAJ,gBAAA,CAPU,cAAA,GAAiB,UAAA,KAAsB,IAAK,OAAA,KAAA,CAAM,QAAC,EAAP,CAAO,CAAQ;QAQjE,IAAJ,gBAAA,CAPU,SAAA,GAAY,cAAA,CAQhB,SAAS,EACT,cAAc,EACd,UAAC,GAPO,EAAG,QAAuB,IAQhC,OAAA,GAAG,CAPC,GAAC,CAAG,UAAC,EAAI,IAAQ,OAAA,CAG7B,CAH6B,QAAa,CAG1C,CAAA,CAH+C,EAAC,CAAE,EAArB,CAAqB,CAAC,EAO3C,CAP2C,CAQ9C,CAPC;QASF,IAAJ,gBAAA,CAPU,WAAA,GAAc,cAAA,CAAe,SAAC,EAAU,UAAA,GAAA,IAAO,OAAA,GAAA,CAAI,MAAC,EAAL,CAAK,CAAM,CAAC;QASjE,EAAJ,CAAA,CAAQ,CAPC,WAAC,CAOV,CAPsB,CAOtB;YACM,MAAN,CAPa;gBAQL,SAAS,WAAA;gBACT,cAAc,gBAAA;gBACd,SAAS,WAAA;gBACT,WAAW,aAAA;aACZ,CAPC;QAQR,CAAK;QAED,MAAJ,CAPW;YAQL,SAAS,EAPE,cAAA,CAAe,WAAC,EAAY,SAAA,CAAU;YAQjD,cAAc,EAPE,cAAA,CAAe,WAAC,EAAY,cAAA,CAAe;YAQ3D,SAAS,EAPE,cAAA,CAAe,WAAC,EAAY,SAAA,CAAU;YAQjD,WAAW,EAPE,cAAA,CAAe,WAAC,EAAY,WAAA,CAAY;SAQtD,CAPC;IAQN,CAAG;IAED,MAAF,CAPS,EAAE,YAAA,cAAA,EAAa,CAAE;AAQ1B,CAAC;AD1CD;;;;;AAKA,6BACE,OAA0C;IAE1C,MAAF,CALS,mBAA4C,GAAM,EAAG,KAAO;QAMjE,IAAJ,gBAAA,CALU,iBAAA,GAAoC;YAMxC,GAAG,EALI,KAAG,CAAK,GAAC,QAAG;YAMnB,QAAQ,EAAd,MAAA,CAAA,MAAA,CAAA,EAAA,EALkB,KAAI,CAAK,QAAC,CAAQ;SAM/B,CALC;QAOF,IAAJ,gBAAA,CALU,SAAA,GAAY,OAAA,CAAQ,GAAC,EAAI,iBAAA,CAAkB,CAAC;QAOlD,EAAJ,CAAA,CAAQ,SALC,CAKT,CALmB,CAKnB;YACM,MAAN,CALa,MAAA,CAAO,MAAC,CAAM,EAAC,EAAG,KAAA,EAAO,iBAAA,CAAkB,CAAC;QAMzD,CAAK;QAED,MAAJ,CALW,KAAA,CAAM;IAMjB,CAAG,CALC;AAMJ,CAAC;ADrBD;;;;;AAKA,oCALC,QAAA;;;;;;IAcD,uBAVG,MAAA,EAAA,KAAA;QAWC,IAAJ,gBAAA,CAVU,GAAA,GAAM,QAAA,CAAS,MAAC,CAAM,CAAC;QAY7B,EAAJ,CAAA,CAAQ,GAVC,IAAM,KAAA,CAAM,QAAC,CAUtB,CAV+B,CAU/B;YACM,MAAN,CAVa,KAAA,CAAM;QAWnB,CAAK;QAED,KAAK,CAVC,GAAC,CAAG,IAAC,CAAI,GAAC,CAAG,CAAC;QAWpB,KAAK,CAVC,QAAC,CAAQ,GAAC,CAAG,GAAG,MAAA,CAAO;QAY7B,MAAJ,CAVW,IAAA,CAAK;IAWhB,CAAG;;;;;;IAQH,wBAfG,QAAA,EAAA,KAAA;QAgBC,IAAJ,gBAAA,CAfQ,SAAA,GAAY,KAAA,CAAM;QAiBtB,GAAJ,CAAA,CAAS,IAAT,gBAAA,CAfa,KAAA,IAAS,QAAA,CAetB,CAfgC,CAehC;YACM,SAAS,GAfG,aAAA,CAAc,QAAC,CAAQ,KAAC,CAAK,EAAE,KAAA,CAAM,IAAI,SAAA,CAAU;QAgBrE,CAAK;QAED,MAAJ,CAfW,SAAA,CAAU;IAgBrB,CAAG;;;;;;IAQH,uBApBG,QAAA,EAAA,KAAA;QAqBC,KAAK,CApBC,GAAC,GAAK,EAAA,CAAG;QAqBf,KAAK,CApBC,QAAC,GAAU,EAAA,CAAG;QAsBpB,cAAc,CApBC,QAAC,EAAS,KAAA,CAAM,CAAC;QAsBhC,MAAJ,CApBW,IAAA,CAAK;IAqBhB,CAAG;;;;;;IAQH,0BAzBG,GAAA,EAAA,KAAA;QA0BC,MAAJ,CAzBW,iBAAA,CAAkB,CAAC,GAAC,CAAG,EAAE,KAAA,CAAM,CAAC;IA0B3C,CAAG;;;;;;IAQH,2BA9BG,IAAA,EAAA,KAAA;QA+BC,IAAJ,gBAAA,CA9BU,SAAA,GA+BJ,IAAI;aACD,MA9BC,CAAM,UAAA,GAAC,IAAM,OAAA,GAAA,IAAO,KAAA,CAAM,QAAC,EAAd,CAAc,CAAQ;aA+BpC,GA9BC,CAAG,UAAA,GAAC,IAAM,OAAA,OAAO,KAAA,CAAM,QAAC,CAAQ,GAAC,CAAG,EAA1B,CAA0B,CAAC,CAAC,MAAC,GAAQ,CAAA,CAAE;QAgCvD,EAAJ,CAAA,CAAQ,SA9BC,CA8BT,CA9BmB,CA8BnB;YACM,KAAK,CA9BC,GAAC,GAAK,KAAA,CAAM,GAAC,CAAG,MAAC,CAAM,UAAC,EAAI,IAAQ,OAAA,EAAA,IAAM,KAAA,CAAM,QAAC,EAAb,CAAa,CAAQ,CAAC;QA+BtE,CAAK;QAED,MAAJ,CA9BW,SAAA,CAAU;IA+BrB,CAAG;;;;;;IAQH,mBAnCG,KAAA;QAoCC,MAAJ,CAnCW,MAAA,CAAO,MAAC,CAAM,EAAC,EAAG,KAAA,EAAO;YAoC9B,GAAG,EAnCE,EAAA;YAoCL,QAAQ,EAnCE,EAAA;SAoCX,CAnCC,CAAC;IAoCP,CAAG;;;;;;;IAaH,oBACI,IAA2B,EAC3B,MAAiB,EACjB,KAAU;QAEV,IAAJ,gBAAA,CAzCU,QAAA,GAAW,KAAA,CAAM,QAAC,CAAQ,MAAC,CAAM,EAAC,CAAE,CAAC;QA0C3C,IAAJ,gBAAA,CAzCU,OAAA,GAAa,MAAA,CAAO,MAAC,CAAM,EAAC,EAAG,QAAA,EAAU,MAAA,CAAO,OAAC,CAAO,CAAC;QA0C/D,IAAJ,gBAAA,CAzCU,MAAA,GAAS,QAAA,CAAS,OAAC,CAAO,CAAC;QA2CjC,EAAJ,CAAA,CAAQ,MAzCC,KAAU,MAAA,CAAO,EAAC,CAyC3B,CAzC8B,CAyC9B;YACM,IAAI,CAzCC,MAAC,CAAM,EAAC,CAAE,GAAG,MAAA,CAAO;YA0CzB,OAzCO,KAAA,CAAM,QAAC,CAAQ,MAAC,CAAM,EAAC,CAAE,CAAC;QA0CvC,CAAK;QAED,KAAK,CAzCC,QAAC,CAAQ,MAAC,CAAM,GAAG,OAAA,CAAQ;IA0CrC,CAAG;;;;;;IAQH,0BA9CG,MAAA,EAAA,KAAA;QA+CC,MAAJ,CA9CW,iBAAA,CAAkB,CAAC,MAAC,CAAM,EAAE,KAAA,CAAM,CAAC;IA+C9C,CAAG;;;;;;IAQH,2BAnDG,OAAA,EAAA,KAAA;QAoDC,IAAJ,gBAAA,CAnDU,OAAA,GAAoC,EAAA,CAAG;QAqD7C,IAAJ,gBAAA,CAnDU,SAAA,GAoDJ,OAAO;aACJ,MAnDC,CAAM,UAAA,MAAC,IAAS,OAAA,MAAA,CAAO,EAAC,IAAK,KAAA,CAAM,QAAC,EAApB,CAAoB,CAAQ;aAoD7C,GAnDC,CAAG,UAAA,MAAC,IAAS,OAAA,UAAA,CAAW,OAAC,EAAQ,MAAA,EAAQ,KAAA,CAAM,EAAlC,CAAkC,CAAC,CAAC,MAAC,GAAQ,CAAA,CAAE;QAqDlE,EAAJ,CAAA,CAAQ,SAnDC,CAmDT,CAnDmB,CAmDnB;YACM,KAAK,CAnDC,GAAC,GAAK,KAAA,CAAM,GAAC,CAAG,GAAC,CAAG,UAAC,EAAI,IAAQ,OAAA,OAAA,CAAQ,EAAC,CAAE,IAAI,EAAA,EAAf,CAAe,CAAG,CAAC;QAoDhE,CAAK;QAED,MAAJ,CAnDW,SAAA,CAAU;IAoDrB,CAAG;IAED,MAAF,CAnDS;QAoDL,SAAS,WAAA;QACT,MAAM,EAnDE,mBAAA,CAAoB,aAAC,CAAa;QAoD1C,OAAO,EAnDE,mBAAA,CAAoB,cAAC,CAAc;QAoD5C,MAAM,EAnDE,mBAAA,CAAoB,aAAC,CAAa;QAoD1C,SAAS,EAnDE,mBAAA,CAAoB,gBAAC,CAAgB;QAoDhD,UAAU,EAnDE,mBAAA,CAAoB,iBAAC,CAAiB;QAoDlD,SAAS,EAnDE,mBAAA,CAAoB,gBAAC,CAAgB;QAoDhD,UAAU,EAnDE,mBAAA,CAAoB,iBAAC,CAAiB;KAoDnD,CAnDC;AAoDJ,CAAC;ADhKD;;;;;;AAMA,kCANC,QAAA,EAAA,IAAA;IAGO,IAAA,yCAQL,EARO,wBAAA,EAAW,0BAAA,EAAY,wBAAA,CAE7B;;;;;;IAcJ,uBAXG,MAAA,EAAA,KAAA;QAYC,MAAJ,CAXW,cAAA,CAAe,CAAC,MAAC,CAAM,EAAE,KAAA,CAAM,CAAC;IAY3C,CAAG;;;;;;IAQH,wBAhBG,SAAA,EAAA,KAAA;QAiBC,IAAJ,gBAAA,CAhBU,MAAA,GAAS,SAAA,CAAU,MAAC,CAiBxB,UAAA,KAAK,IAhBI,OAAA,CAef,CAfiB,QAAC,CAAQ,KAAC,CAAK,IAAI,KAAA,CAAM,QAAC,CAAQ,EAApC,CAAoC,CAiB9C,CAhBC;QAkBF,MAAJ,CAhBW,KAAA,CAAM,MAAC,EAAO,KAAA,CAAM,CAAC;IAiBhC,CAAG;;;;;;IAQH,uBArBG,MAAA,EAAA,KAAA;QAsBC,KAAK,CArBC,QAAC,GAAU,EAAA,CAAG;QAsBpB,KAAK,CArBC,GAAC,GAAK,EAAA,CAAG;QAuBf,cAAc,CArBC,MAAC,EAAO,KAAA,CAAM,CAAC;QAuB9B,MAAJ,CArBW,IAAA,CAAK;IAsBhB,CAAG;;;;;;IAQH,0BA1BG,MAAA,EAAA,KAAA;QA2BC,MAAJ,CA1BW,iBAAA,CAAkB,CAAC,MAAC,CAAM,EAAE,KAAA,CAAM,CAAC;IA2B9C,CAAG;;;;;;;IASH,0BAhCG,MAAA,EAAA,MAAA,EAAA,KAAA;QAiCC,EAAJ,CAAA,CAAQ,CAAR,CAhCU,MAAC,CAAM,EAAC,IAAK,KAAA,CAAM,QAAC,CAAQ,CAgCtC,CAhCwC,CAgCxC;YACM,MAAN,CAAa;QACb,CAAK;QAED,IAAJ,gBAAA,CAhCU,QAAA,GAAW,KAAA,CAAM,QAAC,CAAQ,MAAC,CAAM,EAAC,CAAE,CAAC;QAiC3C,IAAJ,gBAAA,CAhCU,OAAA,GAAU,MAAA,CAAO,MAAC,CAAM,EAAC,EAAG,QAAA,EAAU,MAAA,CAAO,OAAC,CAAO,CAAC;QAkC5D,OAhCO,KAAA,CAAM,QAAC,CAAQ,MAAC,CAAM,EAAC,CAAE,CAAC;QAkCjC,MAAM,CAhCC,IAAC,CAAI,OAAC,CAAO,CAAC;IAiCzB,CAAG;;;;;;IAQH,2BArCG,OAAA,EAAA,KAAA;QAsCC,IAAJ,gBAAA,CArCU,MAAA,GAAc,EAAA,CAAG;QAuCvB,OAAO,CArCC,OAAC,CAAO,UAAA,MAAC,IAAS,OAAA,gBAAA,CAAiB,MAAC,EAAO,MAAA,EAAQ,KAAA,CAAM,EAAvC,CAAuC,CAAC,CAAC;QAuCnE,EAAJ,CAAA,CAAQ,MArCC,CAAM,MAAC,CAqChB,CArCuB,CAqCvB;YACM,KAAK,CArCC,GAAC,GAAK,KAAA,CAAM,GAAC,CAAG,MAAC,CAAM,UAAC,EAAI,IAAQ,OAAA,EAAA,IAAM,KAAA,CAAM,QAAC,EAAb,CAAa,CAAQ,CAAC;QAsCtE,CAAK;QAED,MAAJ,CArCW,KAAA,CAAM,MAAC,EAAO,KAAA,CAAM,CAAC;IAsChC,CAAG;;;;;;IAQH,eA1CG,MAAA,EAAA,KAAA;QA2CC,EAAJ,CAAA,CAAQ,MA1CC,CAAM,MAAC,KAAU,CAAA,CA0C1B,CA1C6B,CA0C7B;YACM,MAAN,CA1Ca,KAAA,CAAM;QA2CnB,CAAK;QAED,MAAM,CA1CC,IAAC,CAAI,IAAC,CAAI,CAAC;QA4ClB,IAAJ,gBAAA,CA1CU,GAAA,GAAa,EAAA,CAAG;QA4CtB,IAAJ,gBAAA,CA1CQ,CAAA,GAAI,CAAA,CAAE;QA2CV,IAAJ,gBAAA,CA1CQ,CAAA,GAAI,CAAA,CAAE;QA4CV,OAAO,CA1CC,GAAG,MAAA,CAAO,MAAC,IAAS,CAAA,GAAI,KAAA,CAAM,GAAC,CAAG,MAAC,EAAO,CA0CtD;YACM,IAAN,gBAAA,CA1CY,KAAA,GAAQ,MAAA,CAAO,CAAC,CAAC,CAAC;YA2CxB,IAAN,gBAAA,CA1CY,OAAA,GAAU,QAAA,CAAS,KAAC,CAAK,CAAC;YA2ChC,IAAN,gBAAA,CA1CY,QAAA,GAAW,KAAA,CAAM,GAAC,CAAG,CAAC,CAAC,CAAC;YA2C9B,IAAN,gBAAA,CA1CY,MAAA,GAAS,KAAA,CAAM,QAAC,CAAQ,QAAC,CAAQ,CAAC;YA4CxC,EAAN,CAAA,CAAU,IA1CC,CAAI,KAAC,EAAM,MAAA,CAAO,IAAI,CAAA,CA0CjC,CA1CoC,CA0CpC;gBACQ,GAAG,CA1CC,IAAC,CAAI,OAAC,CAAO,CAAC;gBA2ClB,CAAC,EA1CC,CAAE;YA2CZ,CAAO;YA1CP,IAAA,CAAa,CAAb;gBA2CQ,GAAG,CA1CC,IAAC,CAAI,QAAC,CAAQ,CAAC;gBA2CnB,CAAC,EA1CC,CAAE;YA2CZ,CAAO;QACP,CAAK;QAED,EAAJ,CAAA,CAAQ,CA1CC,GAAG,MAAA,CAAO,MAAC,CA0CpB,CA1C2B,CA0C3B;YACM,KAAK,CA1CC,GAAC,GAAK,GAAA,CAAI,MAAC,CAAM,MAAC,CAAM,KAAC,CAAK,CAAC,CAAC,CAAC,GAAC,CAAG,QAAC,CAAQ,CAAC,CAAC;QA2C5D,CAAK;QA1CL,IAAA,CAAW,CAAX;YA2CM,KAAK,CA1CC,GAAC,GAAK,GAAA,CAAI,MAAC,CAAM,KAAC,CAAK,GAAC,CAAG,KAAC,CAAK,CAAC,CAAC,CAAC,CAAC;QA2CjD,CAAK;QAED,MAAM,CA1CC,OAAC,CAAO,UAAC,KAAC,EAAM,CAAA;YA2CrB,KAAK,CA1CC,QAAC,CAAQ,QAAC,CAAQ,KAAC,CAAK,CAAC,GAAG,KAAA,CAAM;QA2C9C,CAAK,CA1CC,CAAC;QA4CH,MAAJ,CA1CW,IAAA,CAAK;IA2ChB,CAAG;IAED,MAAF,CA1CS;QA2CL,SAAS,WAAA;QACT,UAAU,YAAA;QACV,SAAS,WAAA;QACT,MAAM,EA1CE,mBAAA,CAAoB,aAAC,CAAa;QA2C1C,SAAS,EA1CE,mBAAA,CAAoB,gBAAC,CAAgB;QA2ChD,MAAM,EA1CE,mBAAA,CAAoB,aAAC,CAAa;QA2C1C,OAAO,EA1CE,mBAAA,CAAoB,cAAC,CAAc;QA2C5C,UAAU,EA1CE,mBAAA,CAAoB,iBAAC,CAAiB;KA2CnD,CA1CC;AA2CJ,CAAC;ADhKD;;;;;AAKA,6BACE,OAGM;IAHN,wBAAA,EAAA,YAGM;IAFA,IAAA,2GAQL,EARO,sBAAA,EAAU,8BAAA,CAIhB;IAMF,IAAF,gBAAA,CAJQ,YAAA,GAAe,yBAAA,EAA4B,CAAG;IAKpD,IAAF,gBAAA,CAJQ,gBAAA,GAAmB,sBAAA,EAAyB,CAAG;IAKrD,IAAF,gBAAA,CAJQ,YAAA,GAAe,YAAA;UACjB,wBAAA,CAAyB,QAAC,EAAS,YAAA,CAAa;UAChD,0BAAA,CAA2B,QAAC,CAAQ,CAAC;IAMzC,MAAF,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACO,YAJC,EAKD,gBAJC,EAKD,YAJC,CACR,CAAI;AAKJ,CAAC;ADvCD;;GAEG;;"}